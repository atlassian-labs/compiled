import { transformSync } from '@babel/core';
import reactBabelPlugin from '@compiled/babel-plugin';
import extractBabelPlugin from '../index';

const transform = (opts: { runtime: 'automatic' | 'classic' } = { runtime: 'classic' }) => (
  code: TemplateStringsArray
) => {
  return transformSync(code[0], {
    configFile: false,
    babelrc: false,
    presets: [['@babel/preset-react', { runtime: opts.runtime }]],
    plugins: [[reactBabelPlugin, { importReact: opts.runtime === 'classic' }], extractBabelPlugin],
  })?.code;
};

describe('removal behaviour', () => {
  describe('when ran in the same step', () => {
    it('should remove CSS prop runtime when classic runtime', () => {
      const actual = transform()`
        import '@compiled/react';

        <div css={{ fontSize: 12 }}>hello world</div>
      `;

      expect(actual).toMatchInlineSnapshot(`
        "/* File generated by @compiled/babel-plugin v0.0.0 */

        import * as React from 'react';
        import { ax, ix } from \\"@compiled/react/runtime\\";

        /*#__PURE__*/
        React.createElement(\\"div\\", {
          className: ax([\\"_1wyb1fwx\\"])
        }, \\"hello world\\");"
      `);
    });

    it('should remove CSS prop runtime when automatic runtime', () => {
      const actual = transform({ runtime: 'automatic' })`
        import '@compiled/react';

        <div css={{ fontSize: 12 }}>hello world</div>
      `;

      expect(actual).toMatchInlineSnapshot(`
        "/* File generated by @compiled/babel-plugin v0.0.0 */
        import { jsx as _jsx } from \\"react/jsx-runtime\\";
        import { jsxs as _jsxs } from \\"react/jsx-runtime\\";

        import { ax, ix } from \\"@compiled/react/runtime\\";

        /*#__PURE__*/
        _jsx(\\"div\\", {
          className: ax([\\"_1wyb1fwx\\"]),
          children: \\"hello world\\"
        });"
      `);
    });
  });
});
